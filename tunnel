#!/usr/bin/env python

import BaseHTTPServer
import urllib2
import datetime
from urlparse import urlparse

base_url = r"http://0.0.0.0:8000/"
start_time = datetime.datetime.now()
sites_dict = {}

class Domain(object):
	def __init__(self, name):
		self.name = name
		self.time_spent = datetime.timedelta()
		self.last_access = datetime.datetime.now()
	

class TunnelHandler(BaseHTTPServer.BaseHTTPRequestHandler):
	def do_GET(self):
    		url = urlparse(self.path)
		if url.netloc != "":
		    	domain = url.netloc
			if not sites_dict.has_key(domain):
				sites_dict[domain] = Domain(domain)
			
			# Increase the timedelta in the dict by
			# the time spent between the last request
			# and now
			if self.last_request == None:
				self.last_request = datetime.datetime.now()
		
			sites_dict[domain].time_spent += datetime.datetime.now() - self.last_request
			self.last_request = datetime.datetime.now()

	        try:
        	    fd = urllib2.urlopen(self.path)
	        except urllib2.URLError:
        	    self.wfile.write("400 : The URL " + self.path + " isn't reachable")
	            return

		print_time_spent(sites_dict)
        	self.wfile.write(fd.read())

	def __init__(self, request, client_address, server):
		self.last_request = None
		BaseHTTPServer.BaseHTTPRequestHandler.__init__(self, request, client_address, server)

def print_time_spent(d):
	print ""
	for e in d:
		print "%s : spent %d seconds" % (d[e].name, d[e].time_spent.seconds)

if __name__ == "__main__":
    server_address = ('', 8000)
    httpd = BaseHTTPServer.HTTPServer(server_address, TunnelHandler)
    print "tunnel proxy running on http://localhost:8000"
    httpd.serve_forever()

